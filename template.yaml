AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    Description: Stage to deploy resources to
    Default: staging
    AllowedValues:
      - staging
      - production
  StageAliasName:
    Description: stage / alias name to be used in this deploy
    Type: String
    AllowedValues:
      - staging
      - production
      - no-alias
    Default: no-alias
  LambdaFun:
    Type: String
    Description: Stage to deploy resources to
    Default: Credlewise-Lambda-Function-SAM-staging
    AllowedValues:
      - Credlewise-Lambda-Function-SAM-staging
      - Credlewise-Lambda-Function-SAM-production
  LambdaHand:
    Type: String
    Description: Stage to deploy resources to
    Default: hellopy_sam.lambda_handler
    AllowedValues:
      - hellopy_sam.lambda_handler
      - hellopy_sam.lambda_handler_new
  DeploymentTimestamp:
    Type: String
    Description: Timestamp to force Lambda version update
    Default: ''
  StageVariables:
    Type: String
    Description: Stage variables for API Gateway in JSON format (e.g., '{"lambdaAlias":"dev"}')


Conditions: 
  SetStageAlias: !Equals [ !Ref StageAliasName, 'staging' ]
  SetProductionAlias: !Equals [ !Ref StageAliasName, 'production' ]
  SetTimestamp: !Not [!Equals [!Ref DeploymentTimestamp, '']]

Globals:
  Function:
    Runtime: python3.8
    Timeout: 30
    Tags:
      project: Cradlewise
      environment: !Ref Stage

Resources:
  CredlewiseLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref LambdaFun
      Handler: !Ref LambdaHand
      CodeUri: aws-sam/python
      Description: Lambda SAM function for Credlewise
      Policies:
        - AWSLambdaBasicExecutionRole
      Events:
        GatewayEvent:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /test1
            Method: POST

  QaVersion:
    Condition: SetStageAlias
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      FunctionName: !Ref CredlewiseLambdaFunction
      
  DevelopVersion:
    Condition: SetProductionAlias
    Type: AWS::Lambda::Version
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      FunctionName: !Ref CredlewiseLambdaFunction
  
  QaAlias:
    Condition: SetStageAlias
    Type: AWS::Lambda::Alias
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      FunctionName: !Ref CredlewiseLambdaFunction
      FunctionVersion: !Select [7, !Split [ ":", !Ref QaVersion]]
      Name: QaAlias

  DevelopAlias:
    Condition: SetProductionAlias
    Type: AWS::Lambda::Alias
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties: 
      FunctionName: !Ref CredlewiseLambdaFunction
      FunctionVersion: !Select [7, !Split [ ":", !Ref DevelopVersion]]
      Name: DevelopAlias
      
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      StageVariables: !Ref StageVariables

  ApiGatewayIntegration:
    Type: AWS::Serverless::ApiGateway::Integration
    Properties:
      ApiId: !Ref ApiGatewayApi
      IntegrationHttpMethod: 'POST' # Update method based on your API requirement
      IntegrationType: AWS_PROXY
      # Use stage variable to construct Lambda function ARN
      Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CredlewiseLambdaFunction.Arn}/${!StageVariables:lambdaAlias}/invocations
      Credentials: !GetAtt CredlewiseLambdaFunction.Arn
  
  ApiGatewayMethod:
    Type: AWS::Serverless::ApiGateway::Method
    Properties:
      RestApiId: !Ref ApiGatewayApi
      ResourceId: !GetAtt ApiGatewayApi.RootResourceId
      HttpMethod: !Ref ApiGatewayIntegration.IntegrationHttpMethod
      IntegrationId: !Ref ApiGatewayIntegration

Outputs:
  ApiGatewayInvokeURL:
    Description: URL to invoke the API Gateway endpoint
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/test1"
  CredlewiseLambdaFunction:
    Description: "SAM cradlewise Lambda Function ARN"
    Value: !GetAtt CredlewiseLambdaFunction.Arn
  ApiUrl:
    Description: URL of the deployed API (based on chosen alias)
    Value: !Sub https://${ApiGatewayApi.ApiEndpoint}/${Stage}
